PROTOBUF

* Это бинарный протокол ХРАНЕНИЯ данных.
* Преимущества:
1) Строгая типизация => быстрый маршал/анмаршал.
2) Много библиотек.
3) Меньше памяти занимает, т.к. бинарный.
4) gRPC - получаем и отдаём данные в формате protobuf.

* Недостатки:
1) Строгая типизация - тому, кто принимает данные, нужен файл имя.pb.go, чтобы знать, что он принимает.
2) Нечитаемый формат, т.к. бинарный.

gRPC

* gRPC (Remote Procedure Call) - система (инструмент, не протокол) удалённого вызова процедур, использующая HTTP/2.
* Конкретные процедуры (функции) можно вызвать, например, через запрос из утилиты grpcurl, указав функцию в  параметре
запроса.
* Типы взаимодействия между клиентом и сервером (запрос(-ы) - ответ(-ы), пока одна из сторон не закроет соединение):
1) Unary
2) Server Streaming
3) Client Streaming
4) Bi Directional Streaming

* На основе файла имя.proto с помощью плагина protoc-gen-go и соответствующей команды protoc (из Makefile'а)
генерируются 2 файла: имя.pb.go и имя_grpc.pb.go. 1-ый - для работы с protobuf'ом, а 2-ой - необходимая реализация
сервера и клиента + интерфейсы, которые нужно реализовать с бизнес-логикой.
* Interceptor'ы <=> middleware для gRPC-запросов.
* Metadata - мапа с метаданными (статус клиента/сервера, ...).

ПАРАМЕТРЫ ОКРУЖЕНИЯ

* Откуда брать (последние 2 - хороший тон):
1) Флаги
2) Конфиги
3) Облако
4) ENV

МОНИТОРИНГ

* Метрики - наборы методов анализа состояния сервера. Есть много методов, но какой из них использовать - ситуативно.
Например, USE:
1) Utilization - ср. время занятости ресурса.
2) Saturation - степень переработки ресурса.
3) Errors - ошибки.

* Можно использовать библиотеки для сбора метрики через локальный серв. Например, prometheus.

ДОСТУПНОСТЬ

* С помощью некоторых инструментов можно оптимизировать приложение:
1) Кэширование.
2) Дедупликация - защита от повторений (несколько одинаковых запросов). Действия происходит через определённую мапу:
map[customKey]someFunc. По итогу: запрос одного клиента обрабатывается, ответ кладётся в кэш, а остальные клиенты ждут.
3) Троттлинг - ограничение на кол-во запросов.
4) Переповторы - повторение запроса по истечении таймаута.